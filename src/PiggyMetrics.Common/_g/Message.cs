// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PiggyMetrics.Common {

  /// <summary>Holder for reflection information generated from message.proto</summary>
  public static partial class MessageReflection {

    #region Descriptor
    /// <summary>File descriptor for message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1tZXNzYWdlLnByb3RvEgZkb3RicGUiCQoHVm9pZFJlcSIqCgdWb2lkUnNw",
            "Eg4KBnN0YXR1cxgBIAEoBRIPCgdtZXNzYWdlGAIgASgJIiEKDkZpbmRBY2Nv",
            "dW50UmVxEg8KB2N1cnJlbnQYASABKAkiTAoKQWNjb3VudFJzcBIOCgZzdGF0",
            "dXMYASABKAUSDwoHbWVzc2FnZRgCIAEoCRIdCgRkYXRhGAMgASgLMg8uZG90",
            "YnBlLkFjY291bnQiLAoHVXNlclJlcRIPCgdhY2NvdW50GAEgASgJEhAKCHBh",
            "c3N3b3JkGAIgASgJIrEBCgdBY2NvdW50EgwKBG5hbWUYASABKAkSEwoLY3Jl",
            "YXRlX3RpbWUYAiABKAkSFgoObGFzdF9zZWVuX3RpbWUYAyABKAkSDAoEbm90",
            "ZRgEIAEoCRIdCgdpbmNvbWVzGAUgAygLMgwuZG90YnBlLkl0ZW0SHgoIZXhw",
            "ZW5zZXMYBiADKAsyDC5kb3RicGUuSXRlbRIeCgZzYXZpbmcYByABKAsyDi5k",
            "b3RicGUuU2F2aW5nIrcBCgpBY2NvdW50UmVxEg8KB2N1cnJlbnQYASABKAkS",
            "EwoLY3JlYXRlX3RpbWUYAiABKAkSFgoObGFzdF9zZWVuX3RpbWUYAyABKAkS",
            "DAoEbm90ZRgEIAEoCRIdCgdpbmNvbWVzGAUgAygLMgwuZG90YnBlLkl0ZW0S",
            "HgoIZXhwZW5zZXMYBiADKAsyDC5kb3RicGUuSXRlbRIeCgZzYXZpbmcYByAB",
            "KAsyDi5kb3RicGUuU2F2aW5nIo4BCgRJdGVtEg0KBXRpdGxlGAEgASgJEg4K",
            "BmFtb3VudBgCIAEoARIiCghjdXJyZW5jeRgDIAEoDjIQLmRvdGJwZS5DdXJy",
            "ZW5jeRIiCgZwZXJpb2QYBCABKA4yEi5kb3RicGUuVGltZVBlcmlvZBIMCgRp",
            "Y29uGAUgASgJEhEKCWNvbnZlcnRlZBgGIAEoASJ3CgZTYXZpbmcSDgoGYW1v",
            "dW50GAEgASgBEiIKCGN1cnJlbmN5GAIgASgOMhAuZG90YnBlLkN1cnJlbmN5",
            "EhAKCGludGVyZXN0GAMgASgBEg8KB2RlcG9zaXQYBCABKAgSFgoOY2FwaXRh",
            "bGl6YXRpb24YBSABKAgqTQoKVGltZVBlcmlvZBIKCgZUUE5PTkUQABIICgRZ",
            "RUFSEAESCwoHUVVBUlRFUhACEgkKBU1PTlRIEAMSBwoDREFZEAQSCAoESE9V",
            "UhAFKjEKCEN1cnJlbmN5EgoKBkNZTk9ORRAAEgcKA1VTRBABEgcKA1JVQhAC",
            "EgcKA0VVUhADQhhIAaoCE1BpZ2d5TWV0cmljcy5Db21tb25iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::PiggyMetrics.Common.TimePeriod), typeof(global::PiggyMetrics.Common.Currency), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PiggyMetrics.Common.VoidReq), global::PiggyMetrics.Common.VoidReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PiggyMetrics.Common.VoidRsp), global::PiggyMetrics.Common.VoidRsp.Parser, new[]{ "Status", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PiggyMetrics.Common.FindAccountReq), global::PiggyMetrics.Common.FindAccountReq.Parser, new[]{ "Current" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PiggyMetrics.Common.AccountRsp), global::PiggyMetrics.Common.AccountRsp.Parser, new[]{ "Status", "Message", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PiggyMetrics.Common.UserReq), global::PiggyMetrics.Common.UserReq.Parser, new[]{ "Account", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PiggyMetrics.Common.Account), global::PiggyMetrics.Common.Account.Parser, new[]{ "Name", "CreateTime", "LastSeenTime", "Note", "Incomes", "Expenses", "Saving" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PiggyMetrics.Common.AccountReq), global::PiggyMetrics.Common.AccountReq.Parser, new[]{ "Current", "CreateTime", "LastSeenTime", "Note", "Incomes", "Expenses", "Saving" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PiggyMetrics.Common.Item), global::PiggyMetrics.Common.Item.Parser, new[]{ "Title", "Amount", "Currency", "Period", "Icon", "Converted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PiggyMetrics.Common.Saving), global::PiggyMetrics.Common.Saving.Parser, new[]{ "Amount", "Currency", "Interest", "Deposit", "Capitalization" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TimePeriod {
    [pbr::OriginalName("TPNONE")] Tpnone = 0,
    [pbr::OriginalName("YEAR")] Year = 1,
    [pbr::OriginalName("QUARTER")] Quarter = 2,
    [pbr::OriginalName("MONTH")] Month = 3,
    [pbr::OriginalName("DAY")] Day = 4,
    [pbr::OriginalName("HOUR")] Hour = 5,
  }

  public enum Currency {
    [pbr::OriginalName("CYNONE")] Cynone = 0,
    [pbr::OriginalName("USD")] Usd = 1,
    [pbr::OriginalName("RUB")] Rub = 2,
    [pbr::OriginalName("EUR")] Eur = 3,
  }

  #endregion

  #region Messages
  public sealed partial class VoidReq : pb::IMessage<VoidReq> {
    private static readonly pb::MessageParser<VoidReq> _parser = new pb::MessageParser<VoidReq>(() => new VoidReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoidReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PiggyMetrics.Common.MessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidReq(VoidReq other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidReq Clone() {
      return new VoidReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoidReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoidReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoidReq other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class VoidRsp : pb::IMessage<VoidRsp> {
    private static readonly pb::MessageParser<VoidRsp> _parser = new pb::MessageParser<VoidRsp>(() => new VoidRsp());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoidRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PiggyMetrics.Common.MessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidRsp(VoidRsp other) : this() {
      status_ = other.status_;
      message_ = other.message_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidRsp Clone() {
      return new VoidRsp(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoidRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoidRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoidRsp other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FindAccountReq : pb::IMessage<FindAccountReq> {
    private static readonly pb::MessageParser<FindAccountReq> _parser = new pb::MessageParser<FindAccountReq>(() => new FindAccountReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FindAccountReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PiggyMetrics.Common.MessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindAccountReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindAccountReq(FindAccountReq other) : this() {
      current_ = other.current_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindAccountReq Clone() {
      return new FindAccountReq(this);
    }

    /// <summary>Field number for the "current" field.</summary>
    public const int CurrentFieldNumber = 1;
    private string current_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Current {
      get { return current_; }
      set {
        current_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FindAccountReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FindAccountReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Current != other.Current) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Current.Length != 0) hash ^= Current.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Current.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Current);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Current.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Current);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FindAccountReq other) {
      if (other == null) {
        return;
      }
      if (other.Current.Length != 0) {
        Current = other.Current;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Current = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountRsp : pb::IMessage<AccountRsp> {
    private static readonly pb::MessageParser<AccountRsp> _parser = new pb::MessageParser<AccountRsp>(() => new AccountRsp());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PiggyMetrics.Common.MessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountRsp(AccountRsp other) : this() {
      status_ = other.status_;
      message_ = other.message_;
      Data = other.data_ != null ? other.Data.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountRsp Clone() {
      return new AccountRsp(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private global::PiggyMetrics.Common.Account data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PiggyMetrics.Common.Account Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      if (!object.Equals(Data, other.Data)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (data_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Data);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountRsp other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          data_ = new global::PiggyMetrics.Common.Account();
        }
        Data.MergeFrom(other.Data);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            if (data_ == null) {
              data_ = new global::PiggyMetrics.Common.Account();
            }
            input.ReadMessage(data_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserReq : pb::IMessage<UserReq> {
    private static readonly pb::MessageParser<UserReq> _parser = new pb::MessageParser<UserReq>(() => new UserReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PiggyMetrics.Common.MessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserReq(UserReq other) : this() {
      account_ = other.account_;
      password_ = other.password_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserReq Clone() {
      return new UserReq(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private string account_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Account != other.Account) return false;
      if (Password != other.Password) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Account.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Account);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserReq other) {
      if (other == null) {
        return;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Account = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Account : pb::IMessage<Account> {
    private static readonly pb::MessageParser<Account> _parser = new pb::MessageParser<Account>(() => new Account());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Account> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PiggyMetrics.Common.MessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account(Account other) : this() {
      name_ = other.name_;
      createTime_ = other.createTime_;
      lastSeenTime_ = other.lastSeenTime_;
      note_ = other.note_;
      incomes_ = other.incomes_.Clone();
      expenses_ = other.expenses_.Clone();
      Saving = other.saving_ != null ? other.Saving.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account Clone() {
      return new Account(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 2;
    private string createTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreateTime {
      get { return createTime_; }
      set {
        createTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_seen_time" field.</summary>
    public const int LastSeenTimeFieldNumber = 3;
    private string lastSeenTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastSeenTime {
      get { return lastSeenTime_; }
      set {
        lastSeenTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "note" field.</summary>
    public const int NoteFieldNumber = 4;
    private string note_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Note {
      get { return note_; }
      set {
        note_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "incomes" field.</summary>
    public const int IncomesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::PiggyMetrics.Common.Item> _repeated_incomes_codec
        = pb::FieldCodec.ForMessage(42, global::PiggyMetrics.Common.Item.Parser);
    private readonly pbc::RepeatedField<global::PiggyMetrics.Common.Item> incomes_ = new pbc::RepeatedField<global::PiggyMetrics.Common.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PiggyMetrics.Common.Item> Incomes {
      get { return incomes_; }
    }

    /// <summary>Field number for the "expenses" field.</summary>
    public const int ExpensesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::PiggyMetrics.Common.Item> _repeated_expenses_codec
        = pb::FieldCodec.ForMessage(50, global::PiggyMetrics.Common.Item.Parser);
    private readonly pbc::RepeatedField<global::PiggyMetrics.Common.Item> expenses_ = new pbc::RepeatedField<global::PiggyMetrics.Common.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PiggyMetrics.Common.Item> Expenses {
      get { return expenses_; }
    }

    /// <summary>Field number for the "saving" field.</summary>
    public const int SavingFieldNumber = 7;
    private global::PiggyMetrics.Common.Saving saving_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PiggyMetrics.Common.Saving Saving {
      get { return saving_; }
      set {
        saving_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Account);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Account other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (CreateTime != other.CreateTime) return false;
      if (LastSeenTime != other.LastSeenTime) return false;
      if (Note != other.Note) return false;
      if(!incomes_.Equals(other.incomes_)) return false;
      if(!expenses_.Equals(other.expenses_)) return false;
      if (!object.Equals(Saving, other.Saving)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (CreateTime.Length != 0) hash ^= CreateTime.GetHashCode();
      if (LastSeenTime.Length != 0) hash ^= LastSeenTime.GetHashCode();
      if (Note.Length != 0) hash ^= Note.GetHashCode();
      hash ^= incomes_.GetHashCode();
      hash ^= expenses_.GetHashCode();
      if (saving_ != null) hash ^= Saving.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (CreateTime.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CreateTime);
      }
      if (LastSeenTime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastSeenTime);
      }
      if (Note.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Note);
      }
      incomes_.WriteTo(output, _repeated_incomes_codec);
      expenses_.WriteTo(output, _repeated_expenses_codec);
      if (saving_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Saving);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (CreateTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreateTime);
      }
      if (LastSeenTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastSeenTime);
      }
      if (Note.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Note);
      }
      size += incomes_.CalculateSize(_repeated_incomes_codec);
      size += expenses_.CalculateSize(_repeated_expenses_codec);
      if (saving_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Saving);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Account other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.CreateTime.Length != 0) {
        CreateTime = other.CreateTime;
      }
      if (other.LastSeenTime.Length != 0) {
        LastSeenTime = other.LastSeenTime;
      }
      if (other.Note.Length != 0) {
        Note = other.Note;
      }
      incomes_.Add(other.incomes_);
      expenses_.Add(other.expenses_);
      if (other.saving_ != null) {
        if (saving_ == null) {
          saving_ = new global::PiggyMetrics.Common.Saving();
        }
        Saving.MergeFrom(other.Saving);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            CreateTime = input.ReadString();
            break;
          }
          case 26: {
            LastSeenTime = input.ReadString();
            break;
          }
          case 34: {
            Note = input.ReadString();
            break;
          }
          case 42: {
            incomes_.AddEntriesFrom(input, _repeated_incomes_codec);
            break;
          }
          case 50: {
            expenses_.AddEntriesFrom(input, _repeated_expenses_codec);
            break;
          }
          case 58: {
            if (saving_ == null) {
              saving_ = new global::PiggyMetrics.Common.Saving();
            }
            input.ReadMessage(saving_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountReq : pb::IMessage<AccountReq> {
    private static readonly pb::MessageParser<AccountReq> _parser = new pb::MessageParser<AccountReq>(() => new AccountReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PiggyMetrics.Common.MessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountReq(AccountReq other) : this() {
      current_ = other.current_;
      createTime_ = other.createTime_;
      lastSeenTime_ = other.lastSeenTime_;
      note_ = other.note_;
      incomes_ = other.incomes_.Clone();
      expenses_ = other.expenses_.Clone();
      Saving = other.saving_ != null ? other.Saving.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountReq Clone() {
      return new AccountReq(this);
    }

    /// <summary>Field number for the "current" field.</summary>
    public const int CurrentFieldNumber = 1;
    private string current_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Current {
      get { return current_; }
      set {
        current_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 2;
    private string createTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreateTime {
      get { return createTime_; }
      set {
        createTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_seen_time" field.</summary>
    public const int LastSeenTimeFieldNumber = 3;
    private string lastSeenTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastSeenTime {
      get { return lastSeenTime_; }
      set {
        lastSeenTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "note" field.</summary>
    public const int NoteFieldNumber = 4;
    private string note_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Note {
      get { return note_; }
      set {
        note_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "incomes" field.</summary>
    public const int IncomesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::PiggyMetrics.Common.Item> _repeated_incomes_codec
        = pb::FieldCodec.ForMessage(42, global::PiggyMetrics.Common.Item.Parser);
    private readonly pbc::RepeatedField<global::PiggyMetrics.Common.Item> incomes_ = new pbc::RepeatedField<global::PiggyMetrics.Common.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PiggyMetrics.Common.Item> Incomes {
      get { return incomes_; }
    }

    /// <summary>Field number for the "expenses" field.</summary>
    public const int ExpensesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::PiggyMetrics.Common.Item> _repeated_expenses_codec
        = pb::FieldCodec.ForMessage(50, global::PiggyMetrics.Common.Item.Parser);
    private readonly pbc::RepeatedField<global::PiggyMetrics.Common.Item> expenses_ = new pbc::RepeatedField<global::PiggyMetrics.Common.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PiggyMetrics.Common.Item> Expenses {
      get { return expenses_; }
    }

    /// <summary>Field number for the "saving" field.</summary>
    public const int SavingFieldNumber = 7;
    private global::PiggyMetrics.Common.Saving saving_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PiggyMetrics.Common.Saving Saving {
      get { return saving_; }
      set {
        saving_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Current != other.Current) return false;
      if (CreateTime != other.CreateTime) return false;
      if (LastSeenTime != other.LastSeenTime) return false;
      if (Note != other.Note) return false;
      if(!incomes_.Equals(other.incomes_)) return false;
      if(!expenses_.Equals(other.expenses_)) return false;
      if (!object.Equals(Saving, other.Saving)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Current.Length != 0) hash ^= Current.GetHashCode();
      if (CreateTime.Length != 0) hash ^= CreateTime.GetHashCode();
      if (LastSeenTime.Length != 0) hash ^= LastSeenTime.GetHashCode();
      if (Note.Length != 0) hash ^= Note.GetHashCode();
      hash ^= incomes_.GetHashCode();
      hash ^= expenses_.GetHashCode();
      if (saving_ != null) hash ^= Saving.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Current.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Current);
      }
      if (CreateTime.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CreateTime);
      }
      if (LastSeenTime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastSeenTime);
      }
      if (Note.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Note);
      }
      incomes_.WriteTo(output, _repeated_incomes_codec);
      expenses_.WriteTo(output, _repeated_expenses_codec);
      if (saving_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Saving);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Current.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Current);
      }
      if (CreateTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreateTime);
      }
      if (LastSeenTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastSeenTime);
      }
      if (Note.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Note);
      }
      size += incomes_.CalculateSize(_repeated_incomes_codec);
      size += expenses_.CalculateSize(_repeated_expenses_codec);
      if (saving_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Saving);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountReq other) {
      if (other == null) {
        return;
      }
      if (other.Current.Length != 0) {
        Current = other.Current;
      }
      if (other.CreateTime.Length != 0) {
        CreateTime = other.CreateTime;
      }
      if (other.LastSeenTime.Length != 0) {
        LastSeenTime = other.LastSeenTime;
      }
      if (other.Note.Length != 0) {
        Note = other.Note;
      }
      incomes_.Add(other.incomes_);
      expenses_.Add(other.expenses_);
      if (other.saving_ != null) {
        if (saving_ == null) {
          saving_ = new global::PiggyMetrics.Common.Saving();
        }
        Saving.MergeFrom(other.Saving);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Current = input.ReadString();
            break;
          }
          case 18: {
            CreateTime = input.ReadString();
            break;
          }
          case 26: {
            LastSeenTime = input.ReadString();
            break;
          }
          case 34: {
            Note = input.ReadString();
            break;
          }
          case 42: {
            incomes_.AddEntriesFrom(input, _repeated_incomes_codec);
            break;
          }
          case 50: {
            expenses_.AddEntriesFrom(input, _repeated_expenses_codec);
            break;
          }
          case 58: {
            if (saving_ == null) {
              saving_ = new global::PiggyMetrics.Common.Saving();
            }
            input.ReadMessage(saving_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Item : pb::IMessage<Item> {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PiggyMetrics.Common.MessageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item(Item other) : this() {
      title_ = other.title_;
      amount_ = other.amount_;
      currency_ = other.currency_;
      period_ = other.period_;
      icon_ = other.icon_;
      converted_ = other.converted_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private double amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 3;
    private global::PiggyMetrics.Common.Currency currency_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PiggyMetrics.Common.Currency Currency {
      get { return currency_; }
      set {
        currency_ = value;
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 4;
    private global::PiggyMetrics.Common.TimePeriod period_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PiggyMetrics.Common.TimePeriod Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 5;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "converted" field.</summary>
    public const int ConvertedFieldNumber = 6;
    private double converted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Converted {
      get { return converted_; }
      set {
        converted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (Amount != other.Amount) return false;
      if (Currency != other.Currency) return false;
      if (Period != other.Period) return false;
      if (Icon != other.Icon) return false;
      if (Converted != other.Converted) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Amount != 0D) hash ^= Amount.GetHashCode();
      if (Currency != 0) hash ^= Currency.GetHashCode();
      if (Period != 0) hash ^= Period.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Converted != 0D) hash ^= Converted.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (Amount != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Amount);
      }
      if (Currency != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Currency);
      }
      if (Period != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Period);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Icon);
      }
      if (Converted != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Converted);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Amount != 0D) {
        size += 1 + 8;
      }
      if (Currency != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Currency);
      }
      if (Period != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Period);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Converted != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Amount != 0D) {
        Amount = other.Amount;
      }
      if (other.Currency != 0) {
        Currency = other.Currency;
      }
      if (other.Period != 0) {
        Period = other.Period;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Converted != 0D) {
        Converted = other.Converted;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 17: {
            Amount = input.ReadDouble();
            break;
          }
          case 24: {
            currency_ = (global::PiggyMetrics.Common.Currency) input.ReadEnum();
            break;
          }
          case 32: {
            period_ = (global::PiggyMetrics.Common.TimePeriod) input.ReadEnum();
            break;
          }
          case 42: {
            Icon = input.ReadString();
            break;
          }
          case 49: {
            Converted = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Saving : pb::IMessage<Saving> {
    private static readonly pb::MessageParser<Saving> _parser = new pb::MessageParser<Saving>(() => new Saving());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Saving> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PiggyMetrics.Common.MessageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Saving() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Saving(Saving other) : this() {
      amount_ = other.amount_;
      currency_ = other.currency_;
      interest_ = other.interest_;
      deposit_ = other.deposit_;
      capitalization_ = other.capitalization_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Saving Clone() {
      return new Saving(this);
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private double amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 2;
    private global::PiggyMetrics.Common.Currency currency_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PiggyMetrics.Common.Currency Currency {
      get { return currency_; }
      set {
        currency_ = value;
      }
    }

    /// <summary>Field number for the "interest" field.</summary>
    public const int InterestFieldNumber = 3;
    private double interest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Interest {
      get { return interest_; }
      set {
        interest_ = value;
      }
    }

    /// <summary>Field number for the "deposit" field.</summary>
    public const int DepositFieldNumber = 4;
    private bool deposit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Deposit {
      get { return deposit_; }
      set {
        deposit_ = value;
      }
    }

    /// <summary>Field number for the "capitalization" field.</summary>
    public const int CapitalizationFieldNumber = 5;
    private bool capitalization_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Capitalization {
      get { return capitalization_; }
      set {
        capitalization_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Saving);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Saving other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Amount != other.Amount) return false;
      if (Currency != other.Currency) return false;
      if (Interest != other.Interest) return false;
      if (Deposit != other.Deposit) return false;
      if (Capitalization != other.Capitalization) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Amount != 0D) hash ^= Amount.GetHashCode();
      if (Currency != 0) hash ^= Currency.GetHashCode();
      if (Interest != 0D) hash ^= Interest.GetHashCode();
      if (Deposit != false) hash ^= Deposit.GetHashCode();
      if (Capitalization != false) hash ^= Capitalization.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Amount != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Amount);
      }
      if (Currency != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Currency);
      }
      if (Interest != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Interest);
      }
      if (Deposit != false) {
        output.WriteRawTag(32);
        output.WriteBool(Deposit);
      }
      if (Capitalization != false) {
        output.WriteRawTag(40);
        output.WriteBool(Capitalization);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Amount != 0D) {
        size += 1 + 8;
      }
      if (Currency != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Currency);
      }
      if (Interest != 0D) {
        size += 1 + 8;
      }
      if (Deposit != false) {
        size += 1 + 1;
      }
      if (Capitalization != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Saving other) {
      if (other == null) {
        return;
      }
      if (other.Amount != 0D) {
        Amount = other.Amount;
      }
      if (other.Currency != 0) {
        Currency = other.Currency;
      }
      if (other.Interest != 0D) {
        Interest = other.Interest;
      }
      if (other.Deposit != false) {
        Deposit = other.Deposit;
      }
      if (other.Capitalization != false) {
        Capitalization = other.Capitalization;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            Amount = input.ReadDouble();
            break;
          }
          case 16: {
            currency_ = (global::PiggyMetrics.Common.Currency) input.ReadEnum();
            break;
          }
          case 25: {
            Interest = input.ReadDouble();
            break;
          }
          case 32: {
            Deposit = input.ReadBool();
            break;
          }
          case 40: {
            Capitalization = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
